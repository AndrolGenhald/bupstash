External storage garbage collection.

We should use libsodium and optimise our authentication to prevent excessive hashing (We already authenticate data via hmac, we don't need authentication of data, only metadata.). Rework how crypto/keys work to be more efficient.

Shift storage engine spec out of sqlite database for easier editing.

Remove dependency on codemap? We should be able to have a small simple version.

Querying tags is allowed to span multiple cli args, but setting them is not, this seems inconsistent.

In storage backends, way to avoid starting unused worker threads?

repository and cache vacuuming.

rename .db file to .sqlite3 ?

think of different name.

Reconsider if we always want a write log, or if it should be optional.

A way to truly disable the write log and stat cache?

Rename send -> put ?

Finalize send/put cli syntax. stdin/file/command output.

Post quantum crypto.

Ways to tune chunking algorithm. Fixed size/others? Min size/max size?

ARCHIVIST_CONNECT/ARCHIVIST_PROXY/???="ssh foo.com/archivist serve"

Prefetch system should also work for non leaf tree nodes. htree peek api?

Rewrite external backend? Only use a single socket for all requests? Are we sure of the benefit?
Fewer sockets, potentially more complicated code?

Allow more than 4gigs of hashes in backend protocol?